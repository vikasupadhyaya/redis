name: Deploy Redis Cluster to EKS

on:
  push:
    branches:
      - main
    paths:
      - 'helm/redis/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: 'us-east-1'
  AWS_ACCOUNT_ID: '634250761496'
  AWS_EKS_DEPLOYER_ROLE_NAME: 'github-actions-eks-deployer'
  EKS_CLUSTER_NAME: 'eks-cluster'
  REDIS_HELM_CHART_PATH: './helm/redis'
  REDIS_VALUES_FILE: 'values.yaml'
  REDIS_NAMESPACE: 'redis'
  REDIS_RELEASE_NAME: 'redis-cluster'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:

    # ✅ Always get latest commit (fixes your issue)
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.sha }}

    # ✅ Configure AWS via OIDC — no token export needed
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.AWS_EKS_DEPLOYER_ROLE_NAME }}
        aws-region: ${{ env.AWS_REGION }}
        role-session-name: github-actions-redis-deploy

    - name: Verify AWS Identity
      run: aws sts get-caller-identity

    # ✅ Configure Kubernetes access
    - name: Configure kubeconfig
      run: |
        aws eks update-kubeconfig \
          --name ${{ env.EKS_CLUSTER_NAME }} \
          --region ${{ env.AWS_REGION }}

        kubectl cluster-info

    # ✅ Install Helm
    - name: Setup Helm
      uses: azure/setup-helm@v4
      with:
        version: 'v3.12.0'

    - name: Add Helm Repository
      run: |
        helm repo add bitnami https://charts.bitnami.com/bitnami
        helm repo update

    # ✅ Create namespace safely
    - name: Create Namespace
      run: kubectl create namespace ${{ env.REDIS_NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -

    # ✅ Deploy Redis in Cluster mode
    - name: Deploy Redis Cluster
      run: |
        helm upgrade --install ${{ env.REDIS_RELEASE_NAME }} bitnami/redis \
          --namespace ${{ env.REDIS_NAMESPACE }} \
          --values ${{ env.REDIS_HELM_CHART_PATH }}/${{ env.REDIS_VALUES_FILE }} \
          --set architecture=replication \
          --set cluster.enabled=true \
          --set auth.enabled=true \
          --atomic \
          --wait \
          --timeout 15m

    # ✅ Verify Redis cluster is healthy
    - name: Verify Redis Cluster
      run: |
        kubectl rollout status statefulset/${{ env.REDIS_RELEASE_NAME }}-primary -n ${{ env.REDIS_NAMESPACE }} --timeout=300s

        REDIS_PASSWORD=$(kubectl get secret -n ${{ env.REDIS_NAMESPACE }} ${{ env.REDIS_RELEASE_NAME }} -o jsonpath='{.data.redis-password}' | base64 --decode)
        REDIS_POD=$(kubectl get pod -n ${{ env.REDIS_NAMESPACE }} -l app.kubernetes.io/instance=${{ env.REDIS_RELEASE_NAME }},app.kubernetes.io/component=primary -o jsonpath='{.items[0].metadata.name}')

        echo "Primary Pod: $REDIS_POD"
        echo "Checking Redis Cluster Health..."

        kubectl exec -n ${{ env.REDIS_NAMESPACE }} $REDIS_POD -- redis-cli -a "$REDIS_PASSWORD" cluster info | grep "cluster_state:ok"

        echo "✅ Redis cluster running and healthy."